buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath("gradle.plugin.com.boxfuse.client:flyway-release:4.1.1")
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'org.flywaydb.flyway'

group = 'javajudd'


jar {
    baseName = 'wordyninjablog'
    version = '0.0.1-SNAPSHOT'
}

configurations {
    providedRuntime
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-tomcat")

    compile("org.apache.tomcat.embed:tomcat-embed-jasper")
    compile("javax.servlet:jstl")
    compile("org.springframework.security:spring-security-taglibs:3.2.7.RELEASE")
    compile("org.sitemesh:sitemesh:3.0.0")

    compile("mysql:mysql-connector-java:5.1.36")
    compile("org.flywaydb:flyway-core")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task buildDocker(type: Docker, dependsOn: build) {
  push = false
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from war
      into stageDir
    }
  }
}
